setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
i <- "A549_EGF"
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
summary(mock_norm2$Mix1_AAACCTGAGGATGGAA)
i <- "DU145_EGF"
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
summary(mock_norm2$Mix1_AAAGATGCACTATCTT)
i <- "MCF7_EGF"
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
summary(mock_norm2$Mix1_AAACGGGGTGGCAAAC)
load("~/Documents/LucieRepeat/TCGAPancancer.RData")
NewQuiescence <- read.csv("~/Documents/LucieRepeat/NewQuiescence.csv")
#prepare data for analysis
NewQuiescence$TCGAid<- sapply(NewQuiescence$Barcode,
function(x) paste(strsplit(x,"-")[[1]][1:4],collapse="-"))
NewQuiescence$dormancy <- NewQuiescence$Group
NewQuiescence <- NewQuiescence[,colnames(NewQuiescence) %in% c("dormancy","TCGAid")]
TCGAPancancer$dormancy <- NULL
TCGAPancancer <- merge(TCGAPancancer, NewQuiescence,
by.x = "TCGAid", by.y = "TCGAid")
View(TCGAPancancer)
setwd("~/Documents/LucieRepeat")
save(TCGAPancancer, file="TCGAPancancer_v2.RData")
Pancancergroups<-TCGAPancancer
Pancancer_Low_Dormancy<-Pancancergroups[Pancancergroups$Group %in% "Fast Cycling",]
save(Pancancer_Low_Dormancy, file="Pancancer_Low_Dormancy_v2.RData")
#group mesenchymal
Pancancer_High_Dormancy<-Pancancergroups[Pancancergroups$Group %in% "Highly Quiescent",]
save(Pancancer_High_Dormancy, file="Pancancer_High_Dormancy_v2.RData")
#run dndscv
dndsoutPancancer_High_Dormancy=dndscv(Pancancer_High_Dormancy, refdb ="~/Documents/LucieRepeat/RefCDS_human_GRCh38.p12.rda",cv=NULL)
View(Pancancergroups)
Pancancer_Low_Dormancy<-Pancancergroups[Pancancergroups$dormancy %in% "Fast Cycling",]
#group mesenchymal
Pancancer_High_Dormancy<-Pancancergroups[Pancancergroups$dormancy %in% "Highly Quiescent",]
save(Pancancer_High_Dormancy, file="Pancancer_High_Dormancy_v2.RData")
library("tidyverse")
library("tidyverse")
library("ggrepel")
library("ggpubr")
library("dndscv")
library("dndscv")
library(tidyr)
library("ggplot2")
#run dndscv
dndsoutPancancer_High_Dormancy=dndscv(Pancancer_High_Dormancy, refdb ="~/Documents/LucieRepeat/RefCDS_human_GRCh38.p12.rda",cv=NULL)
View(Pancancer_High_Dormancy)
Pancancergroups$TCGAid <- NULL
Pancancer_Low_Dormancy<-Pancancergroups[Pancancergroups$dormancy %in% "Fast Cycling",]
#######################################
#HMM state comparison between references
#######################################
#Load original scores:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/output_dir_mid_withzeros")
combined.pseudotime <- read.table("HMM_results_nstates_tumors_for_states3.withEMT.txt", header = TRUE)
combined.pseudotime$OriginalHMM <- sapply(combined.pseudotime$states, function(x)
ifelse(x %in% 1,"epi",
ifelse(x %in% 2,"mix",
ifelse(x %in% 3,"mes","other"))))
combined.pseudotime$states <- NULL
table(combined.pseudotime$OriginalHMM)
References <- c("A549_TNF","A549_TGFB1","DU145_TNF","DU145_TGFB1",
"MCF7_TNF","MCF7_TGFB1","OVCA420_TNF","OVCA420_TGFB1","MCF10_TGFB","MCF10_mock")
for (i in References) {
print(i)
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/SingleReferenceStateDetermination/",i,sep = ""))
new.pseudotime <- read.table("HMM_results_nstates_tumors_for_states3.withEMT.txt", header = TRUE)
new.pseudotime[[i]] <- new.pseudotime$states
new.pseudotime <- new.pseudotime[,colnames(new.pseudotime) %in% c("samples",i)]
combined.pseudotime <- merge(combined.pseudotime, new.pseudotime,
by.x = "samples", by.y = "samples")
}
epi.states <- combined.pseudotime[combined.pseudotime$OriginalHMM %in% "epi",]
mix.states <- combined.pseudotime[combined.pseudotime$OriginalHMM %in% "mix",]
mes.states <- combined.pseudotime[combined.pseudotime$OriginalHMM %in% "mes",]
Summary <- data.frame(References)
Overlap <- NULL
NonOverlap <- NULL
for (i in References) {
overlap.epi <- data.frame(table(epi.states[[i]]))
overlap.epi <- overlap.epi[1,2]
overlap.mix <- data.frame(table(mix.states[[i]]))
overlap.mix <- overlap.mix[3,2]
overlap.mes <- data.frame(table(mes.states[[i]]))
overlap.mes <- overlap.mes[2,2]
overlap <- overlap.epi + overlap.mix + overlap.mes
nonOverlap <- 7180 - overlap
Overlap <- c(Overlap, overlap)
NonOverlap <- c(NonOverlap, nonOverlap)
}
Summary$Overlap <- Overlap
Summary$NonOverlap <- NonOverlap
library(reshape)
library(ggpubr)
Summary <- melt(Summary, id.vars = "References")
colnames(Summary) <- c("Reference","Overlap","Percentage")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/SingleReferenceStateDetermination")
p <- ggplot(Summary, aes(fill=Overlap, y=Percentage, x=Reference, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_fill_manual(values = c("#D95F02", "#666666"))
Summary$Overlap <- factor(Summary$Overlap, levels = c("Overlap","NonOverlap"))
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/SingleReferenceStateDetermination")
p <- ggplot(Summary, aes(fill=Overlap, y=Percentage, x=Reference, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_fill_manual(values = c("#666666", "#D95F02"))
Summary$Overlap <- factor(Summary$Overlap, levels = c("NonOverlap","Overlap"))
Summary$Overlap <- factor(Summary$Overlap, levels = c("NonOverlap","Overlap"))
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/SingleReferenceStateDetermination")
p <- ggplot(Summary, aes(fill=Overlap, y=Percentage, x=Reference, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_fill_manual(values = c("#666666", "#D95F02"))
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/02_HMM_macrostases_EMT/SingleReferenceStateDetermination")
#Plot:
pdf("HMM_state_comparison_between_references.pdf", height = 5, width = 4)
p <- ggplot(Summary, aes(fill=Overlap, y=Percentage, x=Reference, width = 0.75)) +
geom_bar(stat = "identity", position = "fill") + theme_classic()
p + rotate_x_text(45) + scale_fill_manual(values = c("#666666", "#D95F02"))
dev.off()
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/ScRNAseqAnalysis/GSE75688/consensusTME")
load("immune_infiltration.RData")
View(immune_infiltration)
