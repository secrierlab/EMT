setwd(output_dir)
set.seed(12345)
library(glmnet)
cvfit <-cv.glmnet(x = TCGA_GEXP_ALL_sort, y = pseudospace_input_sort$mock, alpha = 1)
pdf("mock_glmnet.pdf")
plot(cvfit)
dev.off()
dfcoef<-as.matrix(coef(cvfit,s= "lambda.min"))
genes_to_use<- names(dfcoef[dfcoef[,1]!=0,])[-1]
list_HMM<- lapply(as.list(paste(colnames(TCGA_GEXP_ALL_sort[,genes_to_use]),"~1")),as.formula)
list_families<-vector(mode="list",length(genes_to_use))
for(lf in 1:length(genes_to_use)){
list_families[[lf]]<-gaussian()
}
state <- 3
nstates=state
input_HMM<-data.frame(time=pseudospace_input_sort$mock,TCGA_GEXP_ALL_sort[,genes_to_use])
HMM<-depmix(list_HMM,input_HMM[,-1],nstates=nstates,family=list_families)
HMMfit<-fit(HMM, verbose = FALSE) #fit our model to the data set
#use also summary summary(HMMfit, which = "transition") to get the transitions
idx_trans<-which(names(getpars(HMMfit))=="")
transition_matrix<-matrix(getpars(HMMfit)[idx_trans],byrow=T,nrow=nstates)
rownames(transition_matrix)<-paste("from",1:nstates,sep="")
colnames(transition_matrix)<-paste("to",1:nstates,sep="")
gp <- graph.adjacency(transition_matrix, mode = "directed", weighted = TRUE)
dp_mst <- minimum.spanning.tree(gp)
pdf(paste("HMM_graph_transition_mock",nstates,"pdf",sep="."),width=12)
plot(gp,edge.label=round(E(gp)$weight, 3))
dev.off()
library(diagram)
pdf(paste("HMM_graph_transition_mock_v2",nstates,"pdf",sep="."))
plotmat(round(transition_matrix,3),
lwd = 1,
box.lwd = 2,
cex.txt = 0.7,
box.size=0.1,
box.prop=0.5,
box.type = "circle",
arr.length=.1,
arr.width=.1,
self.cex = .3,
self.shifty = -.01,
self.shiftx = .15,
main = "",
relsize=0.9,
box.col=c('#e69f00','#56b4e9','#ee0c0c'))
dev.off()
write.table(transition_matrix,file=paste("HMM_graph_transition_mock_v3_transition_matrix",nstates,"txt",sep="."),sep="\t",quote=F)
pdf(paste("HMM_graph_transition_mock_v3",nstates,"pdf",sep="."))
plotmat(t(transition_matrix),
lwd = 1,
box.lwd = 2,
cex.txt = 0.7,
box.size=0.1,
box.prop=0.5,
box.type = "circle",
arr.length=.1,
arr.width=.1,
self.cex = .3,
self.shifty = -.01,
self.shiftx = .15,
main = "",
relsize=0.9,
box.col=c('#e69f00','#56b4e9','#ee0c0c'))
dev.off()
pdf(paste("HMM_graph_transition_mock_mst",nstates,"pdf",sep="."),width=12)
plot(dp_mst,edge.label=round(E(dp_mst)$weight, 3))
dev.off()
HMMpost<-posterior(HMMfit)
output_HMM<-data.frame(samples=rownames(TCGA_GEXP_ALL_sort),HMM_states=as.character(HMMpost[,1]),pseudospace=pseudospace_input_sort$mock,stage=pseudospace_input_sort$tumor_stage)
output_HMM$HMM_states<-as.character(output_HMM$HMM_states)
output_HMM$biological_states<-output_HMM$HMM_states
output_HMM$biological_states<-gsub(output_HMM$biological_states,pattern="3",replacement="mes")
output_HMM$biological_states<-gsub(output_HMM$biological_states,pattern="2",replacement="epi")
output_HMM$biological_states<-gsub(output_HMM$biological_states,pattern="1",replacement="mix")
write.table(output_HMM,file=paste("HMM_results_nstates_",nstates,".txt",sep=""),row.names=F,quote=F,sep="\t")
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort[,genes_to_use]
zscore<-function(x){(x-mean(x))/sd(x)}
TCGA_GEXP_ALL_sort2<-t(apply(TCGA_GEXP_ALL_sort2,2,zscore))
res_HMM<-data.frame(cbind(t(TCGA_GEXP_ALL_sort2),time=pseudospace_input_sort$mock,state=HMMpost[,1]))
res_HMM$state<-as.factor(res_HMM$state)
library(ggplot2)
resHMM_for_heatmap<-cbind(samples=rownames(TCGA_GEXP_ALL_sort),HMMpost)
#
# Create heatmaps to check the expression of the genes along the states
#
annotation_colors=list(tumors=c("ACC"="#996b2f","BLCA"="#724fb3","BRCA"="#ba449c",
"CESC"="#adba3d","CHOL"="#8f2e43","COAD"="#191970",
"ESCA"="#5060ac","HNSC"="#65b06f","KICH"="#B266FF",
"KIRC"="#969841","KIRP"="#bf6d29","LIHC"="#d1972c",
"LUAD"="#36dee6","LUSC"="#cc4b3e","OV"="#d97eb8",
"PAAD"="#c43d7e","PRAD"="#d077d8","READ"="#FFB266","SKCM"="#452c7c",
"STAD"="#43c29e","THYM"="#de6991","THCA"="#757ee8",
"UCS"="#88321a","UCEC"="#75b550","UVM"="#8f2931"),
tumor_stage=c("low_stage"="green3","high_stage"="#e69f00","metastatic"="#ee0c0c","not_reported"="gainsboro"))
row_colors=list(type=c("Mesenchymal_marker"="firebrick4","Epithelial_marker"="dodgerblue3","pEMT"="orange2"))
input_cp_scale2<-pseudospace_input[order(pseudospace_input$mock,decreasing=F),]
ann_samples<-input_cp_scale2[input_cp_scale2$patients2%in%colnames(TCGA_GEXP_ALL_sort2),c(3,11)]
ann_samples[,1]<-as.character(ann_samples[,1])
ann_samples[,2]<-as.character(ann_samples[,2])
colnames(ann_samples)[1:2]<-c("tumors","tumor_stage")
ann_samples$tumor_stage<-gsub(ann_samples$tumor_stage,pattern=" ",replacement="_")
row_colors=list(type=c("Mesenchymal_marker"="firebrick4","Epithelial_marker"="dodgerblue3","pEMT"="#e69f00"))
max_col<-ncol(input_cp_scale2)
ann_genes<-markers_genes_read[markers_genes_read[,1]%in%rownames(TCGA_GEXP_ALL_sort2),]
colnames(ann_genes)<-c("genes","type")
order_samples_colors_genes<-match(rownames(TCGA_GEXP_ALL_sort2),ann_genes[,1])
ann_genes2<-data.frame(ann_genes[order_samples_colors_genes,2])
colnames(ann_genes2)<-"type"
row_ann<-rowAnnotation(df=ann_genes2,col=row_colors)
epi_genes<-intersect(genes_to_use, markers_genes_read[markers_genes_read$status=="Epithelial_marker",1])
mes_genes<-intersect(genes_to_use, markers_genes_read[markers_genes_read$status=="Mesenchymal_marker",1])
# Compute an EMT score of the patients
# VIM + CDH2 + FOXC2 + SNAI1 + SNAI2 + TWIST1 + FN1 + ITGB6 + MMP2 + MMP3 + MMP9 + SOX10 + GCS − CDH1 − DSP − OCLN
# https://www.nature.com/articles/s41598-018-21061-1
epigenes
epi_genes
View(TCGA_GEXP_ALL_sort2)
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
setwd("~/Documents/EMT_paper_revision/Data")
load('TPM_data.RData')
TPM.data[1:10,1:10]
markers_genes <- c(epi_genes, mes_genes)
TCGA_GEXP_ALL <- TPM.data
TCGA_GEXP_ALL_rid<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,]
pseudospace_input$patients2 <- pseudospace_input$patients
pseudospace_input_sort<-pseudospace_input_sort[which(pseudospace_input_sort$patients2%in%colnames(TCGA_GEXP_ALL_rid)),]
TCGA_GEXP_ALL_sort<-log(t(TCGA_GEXP_ALL_rid[,match(pseudospace_input_sort$patients2,colnames(TCGA_GEXP_ALL_rid))])+1,2)
colnames(TCGA_GEXP_ALL_sort)<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,1]
########################
#Extra analysis
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/output_dir/")
pseudospace_input<-read.delim(file="proj_pseudospace.txt")
pseudospace_input$Patient <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][1])
pseudospace_input$SampleType <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][2])
table(pseudospace_input$Patient)
table(pseudospace_input$SampleType)
pseudospace_input$Stage <- sapply(pseudospace_input$Patient, function(x)
ifelse(x %in% c("BC03LN","BC07LN"),"Metastases","Normal"))
pseudospace_input$patients2 <- pseudospace_input$patients
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
markers_genes <- c(epi_genes, mes_genes)
setwd("~/Documents/EMT_paper_revision/Data")
load('TPM_data.RData')
TCGA_GEXP_ALL <- TPM.data
TCGA_GEXP_ALL_rid<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,]
pseudospace_input_sort<-pseudospace_input_sort[which(pseudospace_input_sort$patients2%in%colnames(TCGA_GEXP_ALL_rid)),]
TCGA_GEXP_ALL_sort<-log(t(TCGA_GEXP_ALL_rid[,match(pseudospace_input_sort$patients2,colnames(TCGA_GEXP_ALL_rid))])+1,2)
colnames(TCGA_GEXP_ALL_sort)<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,1]
########################
#Extra analysis
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/output_dir/")
pseudospace_input<-read.delim(file="proj_pseudospace.txt")
pseudospace_input$Patient <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][1])
pseudospace_input$SampleType <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][2])
table(pseudospace_input$Patient)
table(pseudospace_input$SampleType)
pseudospace_input$Stage <- sapply(pseudospace_input$Patient, function(x)
ifelse(x %in% c("BC03LN","BC07LN"),"Metastases","Normal"))
pseudospace_input$patients2 <- pseudospace_input$patients
pseudospace_input_sort<-pseudospace_input[order(pseudospace_input$mock,decreasing=F),]
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
markers_genes <- c(epi_genes, mes_genes)
setwd("~/Documents/EMT_paper_revision/Data")
load('TPM_data.RData')
TCGA_GEXP_ALL <- TPM.data
TCGA_GEXP_ALL_rid<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,]
pseudospace_input_sort<-pseudospace_input_sort[which(pseudospace_input_sort$patients2%in%colnames(TCGA_GEXP_ALL_rid)),]
TCGA_GEXP_ALL_sort<-log(t(TCGA_GEXP_ALL_rid[,match(pseudospace_input_sort$patients2,colnames(TCGA_GEXP_ALL_rid))])+1,2)
colnames(TCGA_GEXP_ALL_sort)<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,1]
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort[,markers_genes]
TCGA_GEXP_ALL_sort[1:10,1:10]
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort[,markers_genes]
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort
zscore<-function(x){(x-mean(x))/sd(x)}
TCGA_GEXP_ALL_sort2<-t(apply(TCGA_GEXP_ALL_sort2,2,zscore))
test <- TCGA_GEXP_ALL_sort2
test <- data.frame(test)
summary(test$BC03LN_28)
TCGA_GEXP_ALL_sort2[1:10,1:10]
all_scores_emt<-NULL
for(iemt in 1:ncol(TCGA_GEXP_ALL_sort2)){
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
score_emt<-mes_epi-mean_epi
all_scores_emt<-c(all_scores_emt,score_emt)
}
iemt <- 1
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
mes_genes <- mes_genes[mes_genes %in% rownames(TCGA_GEXP_ALL)]
epi_genes <- epi_genes[epi_genes %in% rownames(TCGA_GEXP_ALL)]
all_scores_emt<-NULL
for(iemt in 1:ncol(TCGA_GEXP_ALL_sort2)){
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
score_emt<-mes_epi-mean_epi
all_scores_emt<-c(all_scores_emt,score_emt)
}
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
markers_genes <- c(epi_genes, mes_genes)
all_scores_emt<-NULL
mes_genes <- mes_genes[mes_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
epi_genes <- epi_genes[epi_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
for(iemt in 1:ncol(TCGA_GEXP_ALL_sort2)){
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
score_emt<-mes_epi-mean_epi
all_scores_emt<-c(all_scores_emt,score_emt)
}
all(colnames(TCGA_GEXP_ALL_sort2) == pseudospace_input_sort$patients)
pseudospace_input_sort$EMT_score <- all_scores_emt
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
#Compare between metastatic and non-metastatic patients
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
#Compare between metastatic and non-metastatic patients
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
table(pseudospace_input_sort$Stage)
pseudospace_input$Stage <- sapply(pseudospace_input$Patient, function(x)
ifelse(x %in% c("BC03LN","BC07LN"),"Metastases","Primary"))
table(pseudospace_input_sort$Stage)
########################
#Extra analysis
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/output_dir/")
pseudospace_input<-read.delim(file="proj_pseudospace.txt")
pseudospace_input$Patient <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][1])
pseudospace_input$SampleType <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][2])
table(pseudospace_input$Patient)
table(pseudospace_input$SampleType)
pseudospace_input$Stage <- sapply(pseudospace_input$Patient, function(x)
ifelse(x %in% c("BC03LN","BC07LN"),"Metastases","Primary"))
pseudospace_input$patients2 <- pseudospace_input$patients
pseudospace_input_sort<-pseudospace_input[order(pseudospace_input$mock,decreasing=F),]
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
markers_genes <- c(epi_genes, mes_genes)
setwd("~/Documents/EMT_paper_revision/Data")
load('TPM_data.RData')
TCGA_GEXP_ALL <- TPM.data
TCGA_GEXP_ALL_rid<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,]
pseudospace_input_sort<-pseudospace_input_sort[which(pseudospace_input_sort$patients2%in%colnames(TCGA_GEXP_ALL_rid)),]
TCGA_GEXP_ALL_sort<-log(t(TCGA_GEXP_ALL_rid[,match(pseudospace_input_sort$patients2,colnames(TCGA_GEXP_ALL_rid))])+1,2)
colnames(TCGA_GEXP_ALL_sort)<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,1]
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort
zscore<-function(x){(x-mean(x))/sd(x)}
TCGA_GEXP_ALL_sort2<-t(apply(TCGA_GEXP_ALL_sort2,2,zscore))
all_scores_emt<-NULL
mes_genes <- mes_genes[mes_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
epi_genes <- epi_genes[epi_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
for(iemt in 1:ncol(TCGA_GEXP_ALL_sort2)){
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
score_emt<-mes_epi-mean_epi
all_scores_emt<-c(all_scores_emt,score_emt)
}
pseudospace_input_sort$EMT_score <- all_scores_emt
#Compare between metastatic and non-metastatic patients
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
table(pseudospace_input_sort$Stage)
my_comparisons <- list( c("Metastases", "Primary"))
p <- ggplot(pseudospace_input_sort, aes(x=Stage, y=mock, fill = Stage)) +
geom_boxplot()+
labs(x="Cancer Stage", y = "Pseudotime")+
theme_classic()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
#Compare between metastatic and non-metastatic patients
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
table(pseudospace_input_sort$Stage)
pdf("Dataset1_metastatic_vs_primary_pseudotime.pdf",height = 5,width = 5)
my_comparisons <- list( c("Metastases", "Primary"))
p <- ggplot(pseudospace_input_sort, aes(x=Stage, y=mock, fill = Stage)) +
geom_boxplot()+
labs(x="Cancer Stage", y = "Pseudotime")+
theme_classic()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
dev.off()
pdf("Dataset1_metastatic_vs_primary_EMT.pdf",height = 5,width = 5)
my_comparisons <- list( c("Metastases", "Primary"))
p <- ggplot(pseudospace_input_sort, aes(x=Stage, y=EMT_score, fill = Stage)) +
geom_boxplot()+
labs(x="Cancer Stage", y = "EMT score")+
theme_classic()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
dev.off()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
#sc vs bulk
table(pseudospace_input_sort$SampleType)
bulk_patients <- pseudospace_input_sort[pseudospace_input_sort$SampleType %in% "Pooled"]
bulk_patients <- pseudospace_input_sort[pseudospace_input_sort$SampleType %in% "Pooled",]
bulk_patients <- unique(as.character(bulk_patients$Patient))
mean_sc <- NULL
bulk <- NULL
View(pseudospace_input_sort)
i <- "BC11"
print(i)
test <- pseudospace_input_sort[pseudospace_input_sort$Patient %in% i,]
test1 <- test[!(test$SampleType %in% "Pooled"),]
test1 <- mean(test1$mock)
test2 <- test[test$SampleType %in% "Pooled",]
test2 <- mean(test2$mock)
mean_sc <- NULL
bulk <- NULL
for (i in bulk_patients) {
print(i)
test <- pseudospace_input_sort[pseudospace_input_sort$Patient %in% i,]
test1 <- test[!(test$SampleType %in% "Pooled"),]
test1 <- mean(test1$mock)
test2 <- test[test$SampleType %in% "Pooled",]
test2 <- mean(test2$mock)
mean_sc <- c(mean_sc, test1)
bulk <- c(bulk, test2)
}
summary <- data.frame(mean_sc, bulk)
pdf("Dataset1_bulk_vs_scRNAseq.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample peseudotime", y = "mean scRNAseq sample pseudotime")
dev.off()
pdf("Dataset1_bulk_vs_scRNAseq_pseudotime.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample peseudotime", y = "mean scRNAseq sample pseudotime")
dev.off()
mean_sc <- NULL
bulk <- NULL
for (i in bulk_patients) {
print(i)
test <- pseudospace_input_sort[pseudospace_input_sort$Patient %in% i,]
test1 <- test[!(test$SampleType %in% "Pooled"),]
test1 <- mean(test1$EMT_score)
test2 <- test[test$SampleType %in% "Pooled",]
test2 <- mean(test2$EMT_score)
mean_sc <- c(mean_sc, test1)
bulk <- c(bulk, test2)
}
summary <- data.frame(mean_sc, bulk)
pdf("Dataset1_bulk_vs_scRNAseq_emt.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample peseudotime", y = "mean scRNAseq sample pseudotime")
dev.off()
pdf("Dataset1_bulk_vs_scRNAseq_emt.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample emt score", y = "mean scRNAseq sample emt score")
dev.off()
View(TCGA_GEXP_ALL_sort2)
#Heatmap:
TCGA_GEXP_ALL_sort2 <- data.frame(t(TCGA_GEXP_ALL_sort2))
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort2
TCGA_GEXP_ALL_sort3$Pseudotime <- pseudospace_input_sort$mock
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort3[order(TCGA_GEXP_ALL_sort3$Pseudotime),]
View(TCGA_GEXP_ALL_sort3)
TCGA_GEXP_ALL_sort3$Pseudotime <- NULL
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort2
TCGA_GEXP_ALL_sort3$Pseudotime <- pseudospace_input_sort$mock
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort3[order(TCGA_GEXP_ALL_sort3$Pseudotime),]
TCGA_GEXP_ALL_sort3$Pseudotime <- NULL
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort2
TCGA_GEXP_ALL_sort3$Pseudotime <- pseudospace_input_sort$mock
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort3[order(TCGA_GEXP_ALL_sort3$Pseudotime),]
anno <- TCGA_GEXP_ALL_sort3$Pseudotime
anno <- data.frame(anno)
rownames(anno) <- rownames(TCGA_GEXP_ALL)
TCGA_GEXP_ALL_sort3$Pseudotime <- NULL
library(pheatmap)
rownames(anno) <- rownames(TCGA_GEXP_ALL_sort3)
TCGA_GEXP_ALL_sort3$Pseudotime <- NULL
library(pheatmap)
p<-pheatmap(t(TCGA_GEXP_ALL_sort3), show_colnames = FALSE, show_rownames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE, legend = TRUE,color = myCols)
p<-pheatmap(t(TCGA_GEXP_ALL_sort3), show_colnames = FALSE, show_rownames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE, legend = TRUE)
View(TCGA_GEXP_ALL_sort3)
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort2
TCGA_GEXP_ALL_sort3$Pseudotime <- pseudospace_input_sort$mock
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort3[order(TCGA_GEXP_ALL_sort3$Pseudotime),]
########################
#Extra analysis
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/output_dir/")
pseudospace_input<-read.delim(file="proj_pseudospace.txt")
pseudospace_input$Patient <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][1])
pseudospace_input$SampleType <- sapply(pseudospace_input$patients, function(x)
strsplit(x,"_")[[1]][2])
table(pseudospace_input$Patient)
table(pseudospace_input$SampleType)
pseudospace_input$Stage <- sapply(pseudospace_input$Patient, function(x)
ifelse(x %in% c("BC03LN","BC07LN"),"Metastases","Primary"))
pseudospace_input$patients2 <- pseudospace_input$patients
pseudospace_input_sort<-pseudospace_input[order(pseudospace_input$mock,decreasing=F),]
#Calculate EMT scores:
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT")
epi_genes <- c("CDH1","DSP","OCLN")
mes_genes <- c("VIM","CDH2","FOXC2","SNAI1","SNAI2","TWIST1","FN1","ITGB6","MMP2","MMP3","MMP9","SOX10","GCS")
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT/data")
setwd("~/Documents/EMT_paper_revision/02_HMM_macrostases_EMT/data")
markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE)
View(markers)
markers <- markers$genes
markers <- c(markers, epi_genes, mes_genes)
markers <- unique(markers)
setwd("~/Documents/EMT_paper_revision/Data")
load('TPM_data.RData')
TCGA_GEXP_ALL <- TPM.data
markers_genes <- unique(markers)
TCGA_GEXP_ALL_rid<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,]
pseudospace_input_sort<-pseudospace_input_sort[which(pseudospace_input_sort$patients2%in%colnames(TCGA_GEXP_ALL_rid)),]
TCGA_GEXP_ALL_sort<-log(t(TCGA_GEXP_ALL_rid[,match(pseudospace_input_sort$patients2,colnames(TCGA_GEXP_ALL_rid))])+1,2)
colnames(TCGA_GEXP_ALL_sort)<-TCGA_GEXP_ALL[TCGA_GEXP_ALL[,1]%in%markers_genes,1]
TCGA_GEXP_ALL_sort2<-TCGA_GEXP_ALL_sort
zscore<-function(x){(x-mean(x))/sd(x)}
TCGA_GEXP_ALL_sort2<-t(apply(TCGA_GEXP_ALL_sort2,2,zscore))
all_scores_emt<-NULL
mes_genes <- mes_genes[mes_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
epi_genes <- epi_genes[epi_genes %in% rownames(TCGA_GEXP_ALL_sort2)]
for(iemt in 1:ncol(TCGA_GEXP_ALL_sort2)){
mean_epi<-mean(TCGA_GEXP_ALL_sort2[epi_genes,iemt])
mes_epi<-mean(TCGA_GEXP_ALL_sort2[mes_genes,iemt])
score_emt<-mes_epi-mean_epi
all_scores_emt<-c(all_scores_emt,score_emt)
}
pseudospace_input_sort$EMT_score <- all_scores_emt
#Compare between metastatic and non-metastatic patients
setwd("~/Documents/EMT_paper_revision/01_Reconstruction_EMT_bulk/Figures")
table(pseudospace_input_sort$Stage)
pdf("Dataset1_metastatic_vs_primary_pseudotime.pdf",height = 5,width = 5)
my_comparisons <- list( c("Metastases", "Primary"))
p <- ggplot(pseudospace_input_sort, aes(x=Stage, y=mock, fill = Stage)) +
geom_boxplot()+
labs(x="Cancer Stage", y = "Pseudotime")+
theme_classic()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
dev.off()
pdf("Dataset1_metastatic_vs_primary_EMT.pdf",height = 5,width = 5)
my_comparisons <- list( c("Metastases", "Primary"))
p <- ggplot(pseudospace_input_sort, aes(x=Stage, y=EMT_score, fill = Stage)) +
geom_boxplot()+
labs(x="Cancer Stage", y = "EMT score")+
theme_classic()
p +  stat_compare_means(comparisons = my_comparisons, label = "p.signif") # Add pairwise comparisons p-value
dev.off()
#sc vs bulk
table(pseudospace_input_sort$SampleType)
bulk_patients <- pseudospace_input_sort[pseudospace_input_sort$SampleType %in% "Pooled",]
bulk_patients <- unique(as.character(bulk_patients$Patient))
mean_sc <- NULL
bulk <- NULL
for (i in bulk_patients) {
print(i)
test <- pseudospace_input_sort[pseudospace_input_sort$Patient %in% i,]
test1 <- test[!(test$SampleType %in% "Pooled"),]
test1 <- mean(test1$mock)
test2 <- test[test$SampleType %in% "Pooled",]
test2 <- mean(test2$mock)
mean_sc <- c(mean_sc, test1)
bulk <- c(bulk, test2)
}
summary <- data.frame(mean_sc, bulk)
pdf("Dataset1_bulk_vs_scRNAseq_pseudotime.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample peseudotime", y = "mean scRNAseq sample pseudotime")
dev.off()
mean_sc <- NULL
bulk <- NULL
for (i in bulk_patients) {
print(i)
test <- pseudospace_input_sort[pseudospace_input_sort$Patient %in% i,]
test1 <- test[!(test$SampleType %in% "Pooled"),]
test1 <- mean(test1$EMT_score)
test2 <- test[test$SampleType %in% "Pooled",]
test2 <- mean(test2$EMT_score)
mean_sc <- c(mean_sc, test1)
bulk <- c(bulk, test2)
}
summary <- data.frame(mean_sc, bulk)
pdf("Dataset1_bulk_vs_scRNAseq_emt.pdf", width = 5, height = 5)
p <- ggscatter(summary, x = "bulk", y = "mean_sc",add = "reg.line", add.params = list(color = "blue", fill = "lightgray"),
cor.coef = TRUE, alpha = 0.1, size = 2)
p + labs(x = "Bulk sample emt score", y = "mean scRNAseq sample emt score")
dev.off()
#Heatmap:
#Heatmap:
TCGA_GEXP_ALL_sort2 <- data.frame(t(TCGA_GEXP_ALL_sort2))
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort2
TCGA_GEXP_ALL_sort3$Pseudotime <- pseudospace_input_sort$mock
TCGA_GEXP_ALL_sort3 <- TCGA_GEXP_ALL_sort3[order(TCGA_GEXP_ALL_sort3$Pseudotime),]
anno <- TCGA_GEXP_ALL_sort3$Pseudotime
anno <- data.frame(anno)
rownames(anno) <- rownames(TCGA_GEXP_ALL_sort3)
TCGA_GEXP_ALL_sort3$Pseudotime <- NULL
library(pheatmap)
p<-pheatmap(t(TCGA_GEXP_ALL_sort3), show_colnames = FALSE, show_rownames = TRUE, cluster_rows = FALSE, cluster_cols = FALSE, legend = TRUE)
