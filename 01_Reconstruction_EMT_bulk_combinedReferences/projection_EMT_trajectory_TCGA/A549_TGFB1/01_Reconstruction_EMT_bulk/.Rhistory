############################################
#PCA/UMAP individual MCF10 experiments
############################################
#Load required libraries:
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
library(TSCAN)
library(igraph)
library(slingshot)
library(SingleCellExperiment)
library(RColorBrewer)
library(sva)
library(scBatch)
library(Seurat)
library(uwot)
library(mclust, quietly = TRUE)
library(ggplot2)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
norm_expr_data<-function(FM,pseudo_expr){
FM2 <- FM/estimateSizeFactorsForMatrix(FM)
if (is.null(pseudo_expr))
pseudo_expr <- 1
FM2 <- FM2 + pseudo_expr
FM2 <- log2(FM2)
return(FM2)
}
############################
#MCF10 reference:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#setwd("/home/annawiecek/EMT/TCGA_PurityScaledAnalysis/Data")
cds.list <- readRDS("pseudospace_processed_trajectories_cds.list.rds")
mock <- Biobase::exprs(cds.list[["Mock"]])
tgfb <- Biobase::exprs(cds.list[["TGFB"]])
mock_genes<-cds.list[["Mock"]]@featureData@data[,c(1,2)]
tgfb_genes<-cds.list[["TGFB"]]@featureData@data[,c(1,2)]
mock2<-data.frame(genes=mock_genes,as.matrix(mock))
tgfb2<-data.frame(genes=tgfb_genes,as.matrix(tgfb))
mock_pData <- pData(cds.list[["Mock"]])[,c("cell","sample","Pseudotime")]
tgfb_pData <- pData(cds.list[["TGFB"]])[,c("cell","sample","Pseudotime")]
mock_norm <- norm_expr_data(mock2[,-c(1:2)],1)
mock_norm2 <- data.frame(mock2[,c(1:2)],mock_norm)
tgfb_norm <- norm_expr_data(tgfb2[,-c(1:2)],1)
tgfb_norm2 <- data.frame(tgfb2[,c(1:2)],tgfb_norm)
tgfb_norm2$genes.id <- NULL
mock_norm2$genes.id <- NULL
#Identify most variable genes:
vardata<-apply(mock_norm2[,-1],1,var)
mock_norm2$vardata<-vardata
mock_norm2<-mock_norm2[order(mock_norm2$vardata,decreasing=T),]
mock_norm2 <- mock_norm2[1:round((nrow(mock_norm2)*30)/100),-ncol(mock_norm2)]
vardata<-apply(tgfb_norm2[,-1],1,var)
tgfb_norm2$vardata<-vardata
tgfb_norm2<-tgfb_norm2[order(tgfb_norm2$vardata,decreasing=T),]
tgfb_norm2 <- tgfb_norm2[1:round((nrow(tgfb_norm2)*30)/100),-ncol(tgfb_norm2)]
save(tgfb_norm2, file = "tgfb_norm2.RData")
save(mock_norm2, file = "mock_norm2.RData")
save(mock_pData, file = "mock_pData.RData")
save(tgfb_pData, file = "tgfb_pData.RData")
View(mock_pData)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/MCF10/01_Reconstruction_EMT_bulk/data/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/MCF10/01_Reconstruction_EMT_bulk/data/")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/MCF10/01_Reconstruction_EMT_bulk/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
norm_expr_data<-function(FM,pseudo_expr){
FM2 <- FM/estimateSizeFactorsForMatrix(FM)
if (is.null(pseudo_expr))
pseudo_expr <- 1
FM2 <- FM2 + pseudo_expr
FM2 <- log2(FM2)
return(FM2)
}
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
cds.list <- readRDS("pseudospace_processed_trajectories_cds.list.rds")
mock <- Biobase::exprs(cds.list[["Mock"]])
tgfb <- Biobase::exprs(cds.list[["TGFB"]])
#This is the information about reported genes
mock_genes<-cds.list[["Mock"]]@featureData@data[,c(1,2)]
tgfb_genes<-cds.list[["TGFB"]]@featureData@data[,c(1,2)]
#This is the expression data
mock2<-data.frame(genes=mock_genes,as.matrix(mock))
tgfb2<-data.frame(genes=tgfb_genes,as.matrix(tgfb))
#This is the peseudotime data
mock_pData <- pData(cds.list[["Mock"]])[,c("cell","sample","Pseudotime")]
tgfb_pData <- pData(cds.list[["TGFB"]])[,c("cell","sample","Pseudotime")]
mock_norm <- norm_expr_data(mock2[,-c(1:2)],1)
mock_norm2 <- data.frame(mock2[,c(1:2)],mock_norm)
tgfb_norm <- norm_expr_data(tgfb2[,-c(1:2)],1)
tgfb_norm2 <- data.frame(tgfb2[,c(1:2)],tgfb_norm)
mock_norm2_gene<-t(mock_norm2[mock_norm2[,2]=='FN1',-c(1:2)])
mock_norm2_gene<-data.frame(sample=rownames(mock_norm2_gene),mock_norm2_gene)
mock_norm2_gene[,1]<-gsub(mock_norm2_gene[,1],pattern='\\.',replacement='-')
mock_norm2_gene<-merge(mock_norm2_gene,mock_pData,by.x='sample',by.y='cell')[,c(2,3,4)]
colnames(mock_norm2_gene)[1]<-'value'
colnames(mock_norm2_gene)[2]<-'status'
setwd(output_dir)
png('MOCK_FN1_original_scRNA_seq.png', height=6,width=8,units='in',res=300)
ggplot(mock_norm2_gene,aes(x=Pseudotime,y=value,color=status,shape=status))+geom_point(aes(alpha=0.9))+scale_color_manual(values=c('#E69F00','#56B4E9'))+geom_smooth(method='loess',fullrange=T,aes(linetype=status),color='black')
dev.off()
tgfb_norm2_gene<-t(tgfb_norm2[tgfb_norm2[,2]=='FN1',-c(1:2)])
tgfb_norm2_gene<-data.frame(sample=rownames(tgfb_norm2_gene),tgfb_norm2_gene)
tgfb_norm2_gene[,1]<-gsub(tgfb_norm2_gene[,1],pattern='\\.',replacement='-')
tgfb_norm2_gene<-merge(tgfb_norm2_gene,tgfb_pData,by.x='sample',by.y='cell')[,c(2,3,4)]
colnames(tgfb_norm2_gene)[1]<-'value'
colnames(tgfb_norm2_gene)[2]<-'status'
png('TGFB_FN1_original_scRNA_seq.png', height=6,width=8,units='in',res=300)
ggplot(tgfb_norm2_gene,aes(x=Pseudotime,y=value,color=status,shape=status))+geom_point(aes(alpha=0.9))+scale_color_manual(values=c('#E69F00','#56B4E9'))+geom_smooth(method='loess',fullrange=T,aes(linetype=status),color='black')
dev.off()
setwd(input_dir)
save(mock_pData, file = "mock_pData.RData")
save(tgfb_pData, file = "tgfb_pData.RData")
save(mock_norm2, file = "mock_norm2.RData")
save(tgfb_norm2, file = "tgfb_norm2.RData")
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/MCF10/01_Reconstruction_EMT_bulk/")
#setwd("/home/annawiecek/EMT/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/MCF10/01_Reconstruction_EMT_bulk/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
norm_expr_data<-function(FM,pseudo_expr){
FM2 <- FM/estimateSizeFactorsForMatrix(FM)
if (is.null(pseudo_expr))
pseudo_expr <- 1
FM2 <- FM2 + pseudo_expr
FM2 <- log2(FM2)
return(FM2)
}
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#setwd("/home/annawiecek/EMT/TCGA_PurityScaledAnalysis/Data/")
cds.list <- readRDS("pseudospace_processed_trajectories_cds.list.rds")
mock <- Biobase::exprs(cds.list[["Mock"]])
tgfb <- Biobase::exprs(cds.list[["TGFB"]])
#This is the information about reported genes
mock_genes<-cds.list[["Mock"]]@featureData@data[,c(1,2)]
tgfb_genes<-cds.list[["TGFB"]]@featureData@data[,c(1,2)]
#This is the expression data
mock2<-data.frame(genes=mock_genes,as.matrix(mock))
tgfb2<-data.frame(genes=tgfb_genes,as.matrix(tgfb))
#This is the peseudotime data
mock_pData <- pData(cds.list[["Mock"]])[,c("cell","sample","Pseudotime")]
tgfb_pData <- pData(cds.list[["TGFB"]])[,c("cell","sample","Pseudotime")]
View(mock_pData)
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_pData$Pseudotime <- 100 - mock_pData$Pseudotime
tgfb_pData$Pseudotime<-(tgfb_pData$Pseudotime/max(tgfb_pData$Pseudotime))*100
tgfb_pData$Pseudotime <- 100 - tgfb_pData$Pseudotime
View(tgfb_pData)
View(mock_pData)
#
# Normalization, see the documentaiton of monocle for the type of procedures, and monocle:::normalize_expr_data
#
mock_norm <- norm_expr_data(mock2[,-c(1:2)],1)
mock_norm2 <- data.frame(mock2[,c(1:2)],mock_norm)
tgfb_norm <- norm_expr_data(tgfb2[,-c(1:2)],1)
tgfb_norm2 <- data.frame(tgfb2[,c(1:2)],tgfb_norm)
#
# Check scRNA-seq data for VIM
#
mock_norm2_gene<-t(mock_norm2[mock_norm2[,2]=='FN1',-c(1:2)])
mock_norm2_gene<-data.frame(sample=rownames(mock_norm2_gene),mock_norm2_gene)
mock_norm2_gene[,1]<-gsub(mock_norm2_gene[,1],pattern='\\.',replacement='-')
mock_norm2_gene<-merge(mock_norm2_gene,mock_pData,by.x='sample',by.y='cell')[,c(2,3,4)]
colnames(mock_norm2_gene)[1]<-'value'
colnames(mock_norm2_gene)[2]<-'status'
setwd(output_dir)
png('MOCK_FN1_original_scRNA_seq.png', height=6,width=8,units='in',res=300)
ggplot(mock_norm2_gene,aes(x=Pseudotime,y=value,color=status,shape=status))+geom_point(aes(alpha=0.9))+scale_color_manual(values=c('#E69F00','#56B4E9'))+geom_smooth(method='loess',fullrange=T,aes(linetype=status),color='black')
dev.off()
tgfb_norm2_gene<-t(tgfb_norm2[tgfb_norm2[,2]=='FN1',-c(1:2)])
tgfb_norm2_gene<-data.frame(sample=rownames(tgfb_norm2_gene),tgfb_norm2_gene)
tgfb_norm2_gene[,1]<-gsub(tgfb_norm2_gene[,1],pattern='\\.',replacement='-')
tgfb_norm2_gene<-merge(tgfb_norm2_gene,tgfb_pData,by.x='sample',by.y='cell')[,c(2,3,4)]
colnames(tgfb_norm2_gene)[1]<-'value'
colnames(tgfb_norm2_gene)[2]<-'status'
png('TGFB_FN1_original_scRNA_seq.png', height=6,width=8,units='in',res=300)
ggplot(tgfb_norm2_gene,aes(x=Pseudotime,y=value,color=status,shape=status))+geom_point(aes(alpha=0.9))+scale_color_manual(values=c('#E69F00','#56B4E9'))+geom_smooth(method='loess',fullrange=T,aes(linetype=status),color='black')
dev.off()
setwd(input_dir)
save(mock_pData, file = "mock_pData.RData")
save(tgfb_pData, file = "tgfb_pData.RData")
save(mock_norm2, file = "mock_norm2.RData")
save(tgfb_norm2, file = "tgfb_norm2.RData")
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/A549_EGF/01_Reconstruction_EMT_bulk/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
i <- "A549_EGF"
i <- "A549_EGF"
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = ""))
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_norm2[1:10,1:10]
mock_pData <-data.frame(samples=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_pData[1:10,1:10]
mock_pData[1:3,1:3]
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("gene_symbol",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$samples %in% no_sti_emt,]
View(mock_pData)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
i <- "A549_EGF"
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = ""))
#setwd(paste("/home/annawiecek/EMT/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = "))
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#setwd("/home/annawiecek/EMT/TCGA_PurityScaledAnalysis/Data/")
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("gene_symbol",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$samples %in% no_sti_emt,]
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
View(mock_pData)
i <- "A549_TGFB1"
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = ""))
