full.ref$MCF10_MCF7 <- full.ref$MCF10_MCF7 /4
full.ref$A549 <- full.ref$A549 /2
###################################################################
#Correlations acorss individual tissues
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/")
full.ref <- read.table("AveragedPseudotime_midconf_withzeros.txt", header = TRUE,sep = "\t")
full.ref$MCF7 <- 0
full.ref$A549 <- 0
full.ref$DU145 <- 0
full.ref$OVCA420 <- 0
references <- c("A549","DU145","MCF7","OVCA420")
conditions <- c("TNF","TGFB1")
for (i in references) {
for (a in conditions) {
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/",i,"_",a,"/01_Reconstruction_EMT_bulk/output_dir/",sep = ""))
pseudotime_add <- read.table(paste("KNN_projection_TCGA_to_",i,"_",a,"_treated_cells_no_correction_primarytumor_withzeros.txt",sep = ''), header = TRUE,sep = "\t")
full.ref[[i]] <- full.ref[[i]] + pseudotime_add$pseudospace
}
}
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/output_dir/")
mcf10.ref <- read.table("proj_pseudospace_withzeros.txt", header = TRUE,sep = "\t")
full.ref$MCF10 <- mcf10.ref$mock + mcf10.ref$tgfb
full.ref$MCF10_MCF7 <- full.ref$MCF10 + full.ref$MCF7
full.ref$MCF10_MCF7 <- full.ref$MCF10_MCF7 /4
full.ref$A549 <- full.ref$A549 /2
full.ref$DU145 <- full.ref$DU145 /2
full.ref$OVCA420 <- full.ref$OVCA420 /2
#Correaltions:
full.ref$patients <- gsub('\\.', '-', full.ref$patients)
full.ref$CancerType <- sapply(full.ref$patients, function(x)
strsplit(x,"-")[[1]][1])
full.ref <- full.ref[order(full.ref$CancerType),]
CancerType <- unique(full.ref$CancerType)
CancerType <- CancerType[CancerType %in% c("BRCA","LUAD","PRAD","OV")]
Results_corr <- data.frame(c("Pancancer",CancerType))
Results_pval <- data.frame(c("Pancancer",CancerType))
References <- c("MCF10_MCF7","A549","DU145","OVCA420")
colnames(Results_corr)[1] <- "CancerType"
colnames(Results_pval)[1] <- "CancerType"
for (a in References) {
print(a)
Correlation <- NULL
Pvalue <- NULL
cor <- cor.test(full.ref$mock, full.ref[[a]])
Correlation <- c(Correlation, cor$estimate)
Pvalue <- c(Pvalue, cor$p.value)
for (i in CancerType) {
selected.data <- full.ref[full.ref$CancerType %in% i,]
cor <- cor.test(selected.data$mock, selected.data[[a]])
Correlation <- c(Correlation, cor$estimate)
Pvalue <- c(Pvalue, cor$p.value)
}
Results_corr[[a]] <- Correlation
Results_pval[[a]] <- Pvalue
}
rownames(Results_corr) <- Results_corr$CancerType
Results_corr$CancerType <- NULL
rownames(Results_pval) <- Results_pval$CancerType
Results_pval$CancerType <- NULL
Results_corr <- as.matrix(Results_corr)
Results_pval <- as.matrix(Results_pval)
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/VariationBetweenEstimates")
corrplot(Results_corr, method = "circle", na.label.col = "white", tl.col = "black", tl.srt = 45, p.mat = Results_pval, sig.level = 0.05, insig = "blank",addCoef.col = "black")
pdf("Full_vs_cancerwise_reference_correlations.pdf",height = 5, width = 5)
corrplot(Results_corr, method = "circle", na.label.col = "white", tl.col = "black", tl.srt = 45, p.mat = Results_pval, sig.level = 0.05, insig = "blank",addCoef.col = "black")
dev.off()
###################################################################
#Mean change in pseudotime values:
###################################################################
#Create results table
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/")
full.ref <- read.table("AveragedPseudotime_midconf_withzeros.txt", header = TRUE,sep = "\t")
#MCF10
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/output_dir/")
mcf10.ref <- read.table("proj_pseudospace_withzeros.txt", header = TRUE,sep = "\t")
full.ref$MCF10_mock <- full.ref$mock - mcf10.ref$mock
full.ref$MCF10_tgfb <- full.ref$mock - mcf10.ref$tgfb
#Other references
references <- c("A549","DU145","MCF7","OVCA420")
conditions <- c("TNF","TGFB1")
###################################################################
#Mean change in pseudotime values:
###################################################################
#Create results table
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/")
full.ref <- read.table("AveragedPseudotime_midconf_withzeros.txt", header = TRUE,sep = "\t")
#MCF10
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/output_dir/")
mcf10.ref <- read.table("proj_pseudospace_withzeros.txt", header = TRUE,sep = "\t")
full.ref$MCF10_mock <- full.ref$mock - mcf10.ref$mock
full.ref$MCF10_tgfb <- full.ref$mock - mcf10.ref$tgfb
#Other references
references <- c("A549","DU145","MCF7","OVCA420")
conditions <- c("TNF","TGFB1")
for (i in references) {
print(i)
for (a in conditions) {
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/",i,"_",a,"/01_Reconstruction_EMT_bulk/output_dir/",sep = ""))
pseudotime_add <- read.table(paste("KNN_projection_TCGA_to_",i,"_",a,"_treated_cells_no_correction_primarytumor_withzeros.txt",sep = ''), header = TRUE,sep = "\t")
full.ref[[paste(i,a,sep = "_")]] <- full.ref$mock - pseudotime_add$pseudospace
}
}
View(full.ref)
colnames(full.ref)
full.ref <- full.ref[,colnames(full.ref) %in% c("patients","MCF10_mock","MCF10_tgfb","A549_TNF","A549_TGFB1","DU145_TNF",
"DU145_TGFB1","MCF7_TNF","MCF7_TGFB1,OVCA420_TNF","OVCA420_TGFB1")]
library(reshape)
full.ref <- melt(full.ref, id.vars = "patients")
View(full.ref)
colnames(full.ref) <- c("Patients","Reference","PseudotimeDifference")
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/VariationBetweenEstimates")
ggplot(full.ref, aes(x=Reference, y=PseudotimeDifference)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/VariationBetweenEstimates")
pdf("BoxplotPseudotimeDifferences.pdf",height = 5, width = 8)
ggplot(full.ref, aes(x=Reference, y=PseudotimeDifference)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
dev.off()
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA_TNF")
i <- references[1]
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = ""))
i <- "MCF7_TNF"
setwd(paste("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/",i,"/01_Reconstruction_EMT_bulk/",sep = ""))
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("gene_symbol",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
View(mock_pData)
mock_norm2[1:10,1:10]
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
View(emt_markers)
emt_markers <- emt_markers$genes
mock_norm2 <- mock_norm2[rownames(mock_norm2) %in% emt_markers,]
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2[1:10,1:10]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name')
anno <- rbind(anno,mock_pData)
}
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA420_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name')
anno <- rbind(anno,mock_pData)
}
#Add MCF10 data
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/data")
load("mock_norm2.RData")
load("mock_pData.RData")
View(mock_pData)
View(anno)
mock_pData$sample <- "MCF10_mock"
anno <- rbind(anno,mock_pData)
mock_norm2[1:10,1:10]
mock_norm2$genes.id <- NULL
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
View(expr.data)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA420_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name', all = FALSE)
anno <- rbind(anno,mock_pData)
}
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA420_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name', all = TRUE)
anno <- rbind(anno,mock_pData)
}
#Add MCF10 data
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/data")
load("mock_norm2.RData")
load("mock_pData.RData")
mock_pData$sample <- "MCF10_mock"
anno <- rbind(anno,mock_pData)
mock_norm2$genes.id <- NULL
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
load("tgfb_pData.RData")
tgfb_pData$sample <- "MCF10_TGFB"
anno <- rbind(anno,tgfb_pData)
tgfb_pData$genes.id <- NULL
load("tgfb_norm2.RData")
load("tgfb_pData.RData")
tgfb_pData$sample <- "MCF10_TGFB"
anno <- rbind(anno,tgfb_pData)
tgfb_p$genes.id <- NULL
tgfb_norm2$genes.id <- NULL
tgfb_norm2 <- tgfb_norm2[tgfb_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, tgfb_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
View(expr.data)
expr.data[1:10,1:10]
View(anno)
###################################################################
#Plot gene expression prior
rownames(expr.data) <- expr.data$genes.gene_short_name
expr.data$genes.gene_short_name <- NULL
expr.data <- data.frame(t(expr.data))
all(rownames(expr.data) == anno$cell)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA420_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name', all = TRUE)
anno <- rbind(anno,mock_pData)
}
#Add MCF10 data
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/data")
load("mock_norm2.RData")
load("mock_pData.RData")
mock_pData$sample <- "MCF10_mock"
anno <- rbind(anno,mock_pData)
mock_norm2$genes.id <- NULL
mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
load("tgfb_norm2.RData")
load("tgfb_pData.RData")
tgfb_pData$sample <- "MCF10_TGFB"
anno <- rbind(anno,tgfb_pData)
tgfb_norm2$genes.id <- NULL
tgfb_norm2 <- tgfb_norm2[tgfb_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, tgfb_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
###################################################################
#Plot gene expression prior
rownames(expr.data) <- expr.data$genes.gene_short_name
expr.data$genes.gene_short_name <- NULL
expr.data <- data.frame(t(expr.data))
all(rownames(expr.data) == anno$cell)
dim(expr.data)
dim(anno)
expr.data[1:10,1:10]
test <- rownames(expr.data)[!(rownames(expr.data) %in% anno$cell)]
test
rownames(expr.data) <- gsub('\\.', '-', rownames(expr.data))
all(rownames(expr.data) == anno$cell)
all(rownames(expr.data) == anno$cell)
expr.data$Reference <- anno$sample
library(reshape)
expr.data[1:10,1:10]
expr.data.long <- melt(expr.data, id.vars = c("Reference"))
View(expr.data.long)
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
library(reshape)
#Load list of EMT marker genes:
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/Data")
emt_markers <- read.table("EMT_and_pEMT_markers.txt", header = TRUE,sep = "\t")
emt_markers <- emt_markers$genes
#Load and combine data:
references <- c("A549_TGFB1","A549_TNF","DU145_TGFB1","DU145_TNF","MCF7_TGFB1","MCF7_TNF","OVCA420_TGFB1","OVCA420_TNF")
i <- references[1]
#Load data:
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
#mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data <- mock_norm2
anno <- mock_pData
references <- references[-1]
for (i in references) {
input_string<-paste(i,".rds",sep="")
input <-readRDS(input_string)
no_sti_emt<-rownames(input@meta.data[grep(input@meta.data$Time,pattern="_rm",invert=T),])
matrix_temp<-input@assays$RNA@scale.data
print(dim(matrix_temp))
mock_norm2 <-data.frame(gene_symbol=rownames(input@assays$RNA@scale.data),matrix_temp)
colnames(mock_norm2)[1]<-"genes.gene_short_name"
mock_pData <-data.frame(cell=rownames(input@meta.data),sample=i,Pseudotime=as.numeric(input@meta.data$Pseudotime))
mock_norm2 <- mock_norm2[,colnames(mock_norm2) %in% c("genes.gene_short_name",no_sti_emt)]
mock_pData <- mock_pData[mock_pData$cell %in% no_sti_emt,]
mock_pData$Pseudotime<-(mock_pData$Pseudotime/max(mock_pData$Pseudotime))*100
#mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name', all = TRUE)
anno <- rbind(anno,mock_pData)
}
#Add MCF10 data
setwd("~/Documents/EMT_paper_revision/TCGA_PurityScaledAnalysis/MCF10_Cook_averaged/01_Reconstruction_EMT_bulk/projection_EMT_trajectory_TCGA/MCF10/01_Reconstruction_EMT_bulk/data")
load("mock_norm2.RData")
load("mock_pData.RData")
mock_pData$sample <- "MCF10_mock"
anno <- rbind(anno,mock_pData)
mock_norm2$genes.id <- NULL
#mock_norm2 <- mock_norm2[mock_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, mock_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
load("tgfb_norm2.RData")
load("tgfb_pData.RData")
tgfb_pData$sample <- "MCF10_TGFB"
anno <- rbind(anno,tgfb_pData)
tgfb_norm2$genes.id <- NULL
#tgfb_norm2 <- tgfb_norm2[tgfb_norm2$genes.gene_short_name %in% emt_markers,]
expr.data<-merge(expr.data, tgfb_norm2,by.x='genes.gene_short_name',by.y='genes.gene_short_name',all = TRUE)
###################################################################
#Plot gene expression prior
expr.data.emt <- expr.data
