library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
setwd("~/Documents/EMT_paper_revision/TCGA_analysis/CorrectDataset/AlternativeState/01_Reconstruction_EMT_bulk/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
norm_expr_data<-function(FM,pseudo_expr){
FM2 <- FM/estimateSizeFactorsForMatrix(FM)
if (is.null(pseudo_expr))
pseudo_expr <- 1
FM2 <- FM2 + pseudo_expr
FM2 <- log2(FM2)
return(FM2)
}
setwd(input_dir)
cds.list <- readRDS("pseudospace_processed_trajectories_cds.list.rds")
mock <- Biobase::exprs(cds.list[["Mock"]])
mock[1:10,1:10]
#This is the information about reported genes
mock_genes<-cds.list[["Mock"]]@featureData@data[,c(1,2)]
View(mock_genes)
#This is the expression data
mock2<-data.frame(genes=mock_genes,as.matrix(mock))
#This is the peseudotime data
mock_pData <- pData(cds.list[["Mock"]])[,c("cell","sample","Pseudotime")]
mock2[1:10,1:10]
colnames(mock2)
head(colnames(mock2))
mock_norm <- norm_expr_data(mock2[,-c(1:2)],1)
mock_norm[1:10,1;10]
library(data.table)
library(monocle)
library(DropletUtils)
library(DESeq2)
library(irlba)
library(FNN)
setwd("~/Documents/EMT_paper_revision/TCGA_analysis/CorrectDataset/AlternativeState/01_Reconstruction_EMT_bulk/")
source('functions_plot_pseudospace.R')
folder_analysis<-getwd()
current_dir<-getwd()
input_dir<-paste(current_dir,"/data",sep="")
output_dir<-paste(current_dir,"/output_dir",sep="")
norm_expr_data<-function(FM,pseudo_expr){
FM2 <- FM/estimateSizeFactorsForMatrix(FM)
if (is.null(pseudo_expr))
pseudo_expr <- 1
FM2 <- FM2 + pseudo_expr
FM2 <- log2(FM2)
return(FM2)
}
setwd(input_dir)
cds.list <- readRDS("pseudospace_processed_trajectories_cds.list.rds")
mock <- read.csv("GSE147405_A549_TGFB1_TimeCourse_UMI_matrix.csv", header = TRUE)
tgfb <- Biobase::exprs(cds.list[["TGFB"]])
mock[1:10,1:10]
tgfb[1:10,1:10]
head(colnames(mock))
tail(colnames(mock))
tgfb_genes<-cds.list[["TGFB"]]@featureData@data[,c(1,2)]
View(tgfb_genes)
tgfb2<-data.frame(genes=tgfb_genes,as.matrix(tgfb))
tgfb[1:10,1:10]
tgfb2[1:10,1:10]
mock2 <- read.csv("GSE147405_A549_TGFB1_TimeCourse_UMI_matrix.csv", header = TRUE)
tgfb_pData <- pData(cds.list[["TGFB"]])[,c("cell","sample","Pseudotime")]
mock_pData <- read.csv("GSE147405_A549_TGFB1_TimeCourse_metadata.csv", header = TRUE)
View(tgfb_pData)
View(mock_pData)
table(mock_pData$orig.ident)
colnames(mock_pData)
mock_pData <- mock_pData[,colnames(mock_pData) %in% c("X","orig.ident","Pseudotime")]
colnames(mock_pData) <- c("cell","sample","Pseudotime")
View(tgfb_pData)
rownames(mock_pData) <- mock_pData$cell
summary(tgfb2$AAACATACGGACAG.3_Mock_TGFB_agregated_samples)
summary(mock2$Mix1_AACTCTTCACAGCCCA)
mock_norm <- norm_expr_data(mock2[,-c(1)],1)
mock_norm2 <- data.frame(mock2[,c(1)],mock_norm)
tgfb_norm <- norm_expr_data(tgfb2[,-c(1:2)],1)
tgfb_norm2 <- data.frame(tgfb2[,c(1:2)],tgfb_norm)
tgfb_norm2[1:10,1:10]
mock_norm2[1:10,1:10]
mock2[1:10,1:10]
mock_norm2_gene<-t(mock_norm2[mock_norm2[,1]=='FN1',-c(1)])
View(mock_norm2_gene)
tgfb_norm2_gene<-t(tgfb_norm2[tgfb_norm2[,2]=='FN1',-c(1:2)])
View(tgfb_norm2_gene)
tgfb_norm2[1:10,1:10]
colnames(mock_norm2)[1] <- "genes.gene_short_name"
mock_norm2[1:10,1:10]
